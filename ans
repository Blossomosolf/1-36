import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn  as sns
from scipy import stats
import math
import statistics

df_train = pd.read_csv("Titanic_train.csv")


# 以 Fare 為例

print(df_train['Fare'].mean()) #Fare平均
print(df_train['Fare'].std()) #Fare標準差
# 連續型用分布圖行來看
g = sns.FacetGrid(df_train, col='Survived')
g.map(sns.distplot, 'Fare', kde=False)

# 法1：進行一個描述性的統計（規定範圍），從而檢視哪些值是不合理的（範圍以外的值）。

#先透過 計算統計值，分別呈現數量，票價平均，標準差，最大值和最小值。
print(df_train['Fare'].describe()) 
#票價的資料分布不像年齡最大值為 80，最大票價 512 ，所以資料變動範圍較大。
#方法1中，也可以去查過往資料，鐵達票價的範圍，檢查上述的票價是否在販售範圍。

# 法2：進行3倍標準差原則的計算，從而檢視哪些值是可疑的異常值。

import numpy as np

# 創建一個函數，計算在這個資料中， ys:資料，times : 幾倍標準差，找出在這樣條件下的異常值。
def outliers_z_score(ys,times):
    mean_y = np.mean(ys)
    stdev_y = np.std(ys)
    z_scores = [(y - mean_y) / stdev_y for y in ys]
    return np.where(np.abs(z_scores) > times)

out_index=outliers_z_score(df_train['Fare'],3)
print(out_index[0])
print("用第二種方法的找出的 outlier 有哪些?")
print(df_train.loc[out_index[0],'Fare'])
#  所以用這個方法，找出的疑似 outlier 就是高票價的族群。 


# 法3：盒鬚圖判別法(IQR method)

import numpy as np
# 透過一個函數來判斷是否為異常值
def outliers_iqr(ys,times):
    #注意 使用 np.percentile 要去除 nan 要不然計算出來會錯誤，所以我們採用下者的程式 np.nanpercentile
    #quartile_1, quartile_3 = np.percentile(ys, [25, 75])
    quartile_1, quartile_3 = np.nanpercentile(ys, [25, 75])
    iqr = quartile_3 - quartile_1
    lower_bound = quartile_1 - (iqr * times)
    upper_bound = quartile_3 + (iqr * times)
    return np.where((ys > upper_bound) | (ys < lower_bound))
    
out_index2=outliers_iqr(df_train['Fare'],1.5)
print(out_index2)
print("用第三種方法的找出的 outlier 有哪些?(1.5 倍IQR)")
print(df_train.loc[out_index2[0],'Fare'])

out_index3=outliers_iqr(df_train['Fare'],2)
print(out_index3)
print("用第三種方法的找出的 outlier 有哪些?(2 倍IQR)")
print(df_train.loc[out_index3[0],'Fare'])

方法：利用matplotlib包中axes物件的boxplot()方法。， 透過 whis 來設定 IQR 的倍數

# 使用np.isnana(data)，找出在 Fare中的遺失值，然後逐位反轉，讓遺失值為 0,則可以透過索引的方式，濾掉遺失值。
plt.boxplot(df_train['Fare'][~np.isnan(df_train['Fare'])],whis=2)    #作圖
plt.title('Box Plot')
plt.show()
